stages:
  - test
  - build
  - publish

python37:
  image: registry.gitlab.com/potato-oss/google-cloud/django-gcloud-connectors/python37:latest
  stage: test
  before_script:
    - mkdir .reports
  script: tox -e py37
  artifacts:
    reports:
      junit: .reports/django-tests.xml

python37-djangae:
  image: registry.gitlab.com/potato-oss/google-cloud/django-gcloud-connectors/python37:latest
  stage: test
  before_script:
    - mkdir .reports
    - git clone https://github.com/potatolondon/djangae.git
  script:
    - cd djangae
    - tox -e py37  # FIXME: We just really want to create the env
    - source .tox/py37/bin/activate # Active the venv and install this version of cloud connectors
    - pip install git+https://gitlab.com/potato-oss/google-cloud/django-gcloud-connectors.git@$CI_COMMIT_SHA
    - tox -e py37  # Run the Djangae tests again
  artifacts:
    reports:
      junit: .reports/djangae-tests.xml


python36:
  image: registry.gitlab.com/potato-oss/google-cloud/django-gcloud-connectors/python36:latest
  stage: test
  before_script:
    - mkdir .reports
  script: tox -e py36
  artifacts:
    reports:
      junit: .reports/django-tests.xml

flake8:
  image: registry.gitlab.com/potato-oss/google-cloud/django-gcloud-connectors/python37:latest
  before_script:
    - mkdir .reports
  script: tox -e flake8 -- --format junit-xml --output-file=".reports/flake8.xml"
  artifacts:
    reports:
      junit: .reports/flake8.xml

build and test-publish:
  stage: build
  image: python:3.7
  only:
    - tags
  before_script:
    - pip install twine setuptools wheel
    - rm -rf dist
    - python setup.py sdist bdist_wheel
  script:
    - python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*
  artifacts:
    paths:
      - dist
  variables:
    TWINE_PASSWORD: $TEST_PYPI_TOKEN
    TWINE_USERNAME: __token__

publish to prod pypi:
  stage: publish
  dependencies: ["build and test-publish"]
  needs: ["build and test-publish"]
  when: manual
  image: python:3.7
  only:
    - tags
  before_script:
    - pip install twine
  script:
    - python -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*
  variables:
    TWINE_PASSWORD: $PROD_PYPI_TOKEN
    TWINE_USERNAME: __token__
